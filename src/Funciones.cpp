#include<iostream>
#include "rlutil.h"
using namespace std;

#include "Funciones.h"


void cargarCadena(char *pal, int tam){
  int i;
  fflush(stdin);
  for(i=0;i<tam;i++){
      pal[i]=cin.get();
      if(pal[i]=='\n') break;
      }
  pal[i]='\0';
  fflush(stdin);
}


///MATRIZ EDIFICIOS - MENU PRINCIPAL DE LOGIN
void mostrarMatriz2(int matriz[][90]){
///char a=char(219);
  for (int i=0;i<15;i++){
    ///cout<<"                                   ";
    for (int j=0;j<90;j++){
      if (matriz[i][j]==0){
        rlutil::setColor(rlutil::BLACK);

      }
      if (matriz[i][j]==1){
        rlutil::setColor(rlutil::LIGHTBLUE);
      }
      if (matriz[i][j]==2){
        rlutil::setColor(rlutil::GREY);
      }

      if (matriz[i][j]==3){
        rlutil::setColor(rlutil::CYAN);
      }
       if (matriz[i][j]==4){
        rlutil::setColor(rlutil::MAGENTA);
      }
      cout<<char(219);
    }
    cout<<endl;
  }
  rlutil::setColor(rlutil::WHITE);
}



void mostrarMenuPrincipal(){

  rlutil::locate(1,10);

const int tam3=15, tam4=90;
int matriz2[tam3][tam4]{
  0,0,0,0,0,  0,0,0,0,0 ,0,0,0,0,0  ,0,0,0,0,0  ,0,0,0,0,0, 0,0,0,0,0,  0,0,0,0,0 ,0,0,0,0,0  ,0,0,0,0,0  ,0,0,0,0,0             ,0,0,0,0,0, 0,0,0,0,0 ,0,0,0,0,0  ,0,0,0,0,0  ,0,0,0,0,0  ,0,0,0,0,0  ,0,0,0,0,0  ,0,0,0,0,0,
  0,0,0,0,0,  0,0,0,0,0 ,0,0,0,0,0  ,0,0,0,0,0  ,0,0,0,0,0, 0,0,0,0,0,  0,0,0,0,0 ,0,0,0,0,0  ,0,0,0,0,0  ,0,0,0,0,0             ,0,0,0,0,0, 0,0,0,0,0 ,0,0,0,0,0  ,0,0,0,0,0  ,0,0,0,0,0  ,0,0,0,0,0  ,0,0,0,0,0  ,0,0,0,0,0,
  0,0,0,0,0,  0,0,0,0,0 ,0,0,3,0,0  ,0,0,0,0,0  ,0,0,0,0,0, 0,0,0,0,0,  0,0,0,0,0 ,0,0,0,0,0  ,0,0,0,0,0  ,0,0,0,0,0             ,0,0,0,0,0, 0,0,0,0,0 ,0,0,0,0,0  ,0,0,0,0,0  ,0,0,0,4,0  ,0,0,0,0,0  ,0,0,0,0,0  ,0,0,0,0,0,
  0,0,0,0,0,  0,0,0,0,0 ,0,3,3,3,0  ,0,0,0,0,0  ,0,0,0,0,0, 0,0,0,0,0,  0,0,0,0,0 ,0,0,0,0,0  ,0,0,0,0,0  ,0,0,0,0,0             ,0,0,0,0,0, 0,0,0,0,0 ,0,0,0,0,0  ,0,0,0,0,0  ,0,0,4,4,4  ,0,0,0,0,0  ,0,0,0,0,0  ,0,0,0,0,0,
  0,0,0,0,4,  0,0,0,0,0 ,3,3,3,3,3  ,1,1,1,0,0  ,0,0,0,0,0, 0,0,0,0,0,  0,0,0,0,0 ,0,0,0,0,0  ,0,0,0,0,0  ,0,0,0,0,0             ,0,0,0,0,0, 0,0,0,0,0 ,0,0,0,0,0  ,0,0,0,0,0  ,0,4,4,4,4  ,4,0,0,0,0  ,0,1,0,0,0  ,0,0,0,0,0,
  0,0,0,4,4,  4,0,0,0,0 ,3,2,3,2,3  ,1,1,1,0,0  ,0,0,0,0,0, 0,0,0,0,0,  0,0,0,0,0 ,0,0,0,0,0  ,0,0,0,0,0  ,0,0,0,0,0             ,0,0,0,0,0, 0,0,0,0,0 ,0,0,0,0,0  ,0,0,0,0,0  ,0,4,2,4,2  ,4,0,0,0,0  ,1,1,1,0,0  ,0,0,0,0,0,
  0,0,4,4,4,  4,4,0,0,0 ,3,3,3,3,3  ,4,4,4,4,4  ,0,0,0,1,0, 0,0,0,0,0,  0,0,0,0,0 ,0,0,0,0,0  ,0,0,0,0,0  ,0,0,0,0,0             ,0,0,0,0,0, 0,0,4,0,0 ,0,0,0,0,1  ,1,1,1,1,1  ,1,4,4,4,4  ,4,0,0,1,1  ,1,1,1,1,1  ,0,0,0,0,0,
  0,0,4,2,4,  2,4,1,1,1 ,3,2,3,2,3  ,4,2,4,2,4  ,0,0,1,1,1, 0,0,0,0,0,  0,0,0,0,0 ,0,0,0,0,0  ,0,0,0,0,0  ,0,0,0,0,0             ,0,0,0,0,0, 0,4,4,4,0 ,0,0,0,0,1  ,1,2,1,2,1  ,1,4,2,4,2  ,4,0,0,1,1  ,2,1,2,4,4  ,4,4,4,0,0,
  0,0,4,4,4,  4,4,1,1,1 ,3,3,3,3,3  ,4,4,4,4,4  ,1,1,1,1,1, 1,1,0,0,0,  0,0,0,0,0 ,0,0,0,0,0  ,0,0,0,0,0  ,0,0,0,0,0             ,0,0,0,0,4, 4,4,4,4,4 ,4,0,0,0,1  ,1,1,1,1,1  ,1,4,4,4,4  ,4,0,0,1,1  ,1,1,1,4,2  ,4,2,4,0,0,
  0,0,4,2,4,  2,4,1,1,1 ,3,2,3,2,3  ,4,2,4,2,4  ,1,2,1,2,1, 2,1,0,0,0,  0,0,0,0,0 ,0,0,0,0,0  ,0,0,0,0,0  ,0,0,0,0,0             ,0,0,0,0,4, 2,4,2,4,2 ,4,3,3,3,3  ,3,2,1,2,1  ,1,4,2,4,2  ,4,0,0,1,1  ,2,1,2,4,4  ,4,4,4,0,0,
  0,0,4,4,4,  4,4,1,1,1 ,3,3,3,1,1  ,1,1,1,4,4  ,1,1,1,1,1, 1,1,3,3,3,  0,0,0,0,0 ,0,0,0,0,0  ,0,0,0,0,0  ,0,0,0,0,0             ,0,0,0,0,4, 4,4,4,4,4 ,4,3,2,3,2  ,3,1,1,1,1  ,1,4,4,3,3  ,3,3,3,3,3  ,1,1,1,4,2  ,4,2,4,0,0,
  0,0,4,2,4,  2,4,1,1,1 ,3,2,3,1,1  ,2,1,1,2,4  ,1,2,1,2,4, 4,4,4,4,4,  4,0,0,0,0 ,0,0,0,0,0  ,0,0,0,0,0  ,0,0,0,0,0             ,0,0,0,0,4, 2,4,2,4,2 ,4,3,3,3,3  ,3,2,1,2,1  ,1,4,4,3,2  ,3,2,3,2,3  ,2,1,2,4,4  ,4,4,4,0,0,
  0,0,4,4,4,  4,4,1,1,1 ,3,3,3,1,1  ,1,1,1,4,4  ,1,1,1,1,4, 4,2,4,2,4,  4,0,0,0,0 ,0,0,0,0,0  ,0,0,0,0,0  ,0,0,0,0,0             ,0,0,0,0,4, 4,4,4,4,4 ,4,3,2,3,2  ,3,1,1,1,1  ,1,4,4,3,3  ,3,3,3,3,3  ,1,1,1,4,2  ,4,2,4,0,0,
  0,0,4,2,4,  2,4,1,1,1 ,3,2,3,1,1  ,2,1,1,4,4  ,1,2,1,2,4, 4,4,4,4,4,  4,0,0,0,0 ,0,0,0,0,0  ,0,0,0,0,0  ,0,0,0,0,0             ,0,0,0,0,4, 2,4,2,4,2 ,4,3,3,3,3  ,3,2,1,2,1  ,1,4,4,3,2  ,3,2,3,2,3  ,1,1,1,4,4  ,4,4,4,0,0,
  0,0,4,4,4,  4,4,1,1,1 ,3,3,3,1,1  ,1,1,1,4,4  ,1,1,1,1,4, 4,4,4,4,4,  4,0,0,0,0 ,0,0,0,0,0  ,0,0,0,0,0  ,0,0,0,0,0             ,0,0,0,0,4, 4,4,4,4,4 ,4,3,3,3,3  ,3,1,1,1,1  ,1,4,4,3,3  ,3,3,3,3,3  ,1,1,1,4,4  ,4,4,4,0,0

};

mostrarMatriz2(matriz2);

}



///MATRIZ 1 EDIFICIO - MENU DE RESERVAS

void mostrarMatrizDisco(int matriz[][40]){
///char a=char(219);
  for (int i=0;i<40;i++){
    ///cout<<"                                   ";
    for (int j=0;j<40;j++){
      if (matriz[i][j]==0){
        ///cout<<"asd"<<endl;
        ///color (hConsole,4);
        rlutil::setColor(rlutil::BLACK);

      }
      if (matriz[i][j]==1){
        rlutil::setColor(rlutil::MAGENTA);

      }
      if (matriz[i][j]==2){
        rlutil::setColor(rlutil::WHITE);

      }

      if (matriz[i][j]==3){
        rlutil::setColor(rlutil::GREEN);

      }
       if (matriz[i][j]==4){
        rlutil::setColor(rlutil::BROWN);

      }
       if (matriz[i][j]==5){
        rlutil::setColor(rlutil::CYAN);

      }

      rlutil::locate(50+j,0+i);
      cout<<char(219);

    }
    cout<<endl;
  }
  rlutil::setColor(rlutil::WHITE);

}


void mostrarMenuSegundario(){

  ///rlutil::locate(45,10);
const int tam7=40, tam8=40;
int matrizDiscoDuro[tam7][tam8]{

0,0,0,0,0,0,0,0 ,0,0  ,0,0,0,0,0,0,0,0,0,0   ,0,0,0,0,0,0,0,0,0,0,  0,0,  0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0 ,0,0  ,0,0,0,0,0,0,0,0,0,0   ,0,0,0,0,0,0,0,0,0,0,  0,0,  0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0 ,0,0  ,0,0,0,0,0,0,0,0,0,0   ,0,0,0,0,0,0,0,0,0,0,  0,0,  0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0 ,0,0  ,0,0,0,0,0,0,0,0,0,0   ,0,0,0,0,0,0,0,0,0,0,  0,0,  0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0 ,0,0  ,0,0,0,0,0,0,0,0,0,0   ,0,0,0,0,0,0,0,0,0,0,  0,0,  0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0 ,0,0  ,0,0,0,0,0,0,0,0,0,0   ,0,0,0,0,0,0,0,0,0,0,  0,0,  0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0 ,0,0  ,0,0,0,0,0,0,0,0,0,0   ,0,0,0,0,0,0,0,0,0,0,  0,0,  0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0 ,0,0  ,0,0,0,0,0,0,0,0,0,0   ,0,0,0,0,0,0,0,0,0,0,  0,0,  0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0 ,0,0  ,0,0,0,0,0,0,0,0,0,0   ,0,0,0,0,0,0,0,0,0,0,  0,0,  0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0 ,0,0  ,0,0,0,0,0,0,0,0,0,0   ,0,0,0,0,0,0,0,0,0,0,  0,0,  0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0 ,0,0  ,0,0,0,0,0,0,0,0,0,0   ,0,0,0,0,0,0,0,0,0,0,  0,0,  0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0 ,0,0  ,0,0,0,0,0,0,0,0,0,0   ,0,0,0,0,0,0,0,0,0,0,  5,5,  0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0 ,0,0  ,0,0,0,0,0,0,0,0,0,0   ,0,0,0,0,0,0,0,5,5,5,  5,5,  5,5,5,0,0,0,0,0,
0,0,0,0,0,0,0,0 ,0,0  ,0,0,0,0,0,0,0,0,0,0   ,0,0,5,5,5,5,5,5,5,5,  5,5,  5,5,5,5,5,5,5,0,
0,0,0,0,0,0,0,0 ,0,0  ,0,0,0,0,0,0,0,0,0,0   ,0,0,5,5,5,5,5,5,5,5,  5,5,  5,5,5,5,5,5,5,0,
0,0,0,0,0,0,0,0 ,0,0  ,0,0,0,0,0,0,0,0,0,0   ,0,0,5,5,2,2,2,5,5,2,  2,2,  5,5,2,2,2,5,5,0,
0,0,0,0,0,0,0,0 ,0,0  ,0,0,0,0,0,0,0,0,0,0   ,0,0,5,5,2,2,2,5,5,2,  2,2,  5,5,2,2,2,5,5,0,
0,0,0,0,0,0,0,0 ,0,0  ,0,0,0,0,0,0,0,0,0,0   ,0,0,5,5,5,5,5,5,5,5,  5,5,  5,5,5,5,5,5,5,0,
0,0,0,0,0,0,0,0 ,0,0  ,0,0,0,0,0,0,0,0,0,0   ,0,0,5,5,2,2,2,5,5,2,  2,2,  5,5,2,2,2,5,5,0,
0,0,0,0,0,0,0,0 ,0,0  ,0,0,0,0,0,0,0,0,0,0   ,0,0,5,5,2,2,2,5,5,2,  2,2,  5,5,2,2,2,5,5,0,




0,0,0,0,0,0,0,0 ,0,0  ,1,1,1,1,1,1,1,1,1,1   ,1,1,1,1,1,1,1,1,1,1,  5,5,  5,5,5,5,5,5,5,0,
0,0,0,0,0,0,0,0 ,0,0  ,1,1,1,1,1,1,1,1,1,1   ,1,1,1,1,1,1,1,1,1,1,  2,2,  5,5,2,2,2,5,5,0,
0,0,0,0,0,0,0,0 ,0,0  ,1,1,2,2,2,2,1,1,2,2   ,2,2,1,1,2,2,2,2,1,1,  2,2,  5,5,2,2,2,5,5,0,
0,0,0,0,0,0,0,0 ,0,0  ,1,1,2,2,2,2,1,1,2,2   ,2,2,1,1,2,2,2,2,1,1,  5,5,  5,5,5,5,5,5,5,0,
0,0,0,0,0,0,0,0 ,0,0  ,1,1,1,1,1,1,1,1,1,1   ,1,1,1,1,1,1,1,1,1,1,  2,2,  5,5,2,2,2,5,5,0,
0,0,0,0,0,0,0,0 ,0,0  ,1,1,1,1,1,1,1,1,1,1   ,1,1,1,1,1,1,1,1,1,1,  2,2,  5,5,2,2,2,5,5,0,

0,0,0,0,0,0,0,0 ,0,0  ,1,1,2,2,2,2,1,1,2,2   ,2,2,1,1,2,2,2,2,1,1,  5,5,  5,5,5,5,5,5,5,0,
0,0,0,0,0,0,0,0 ,0,0  ,1,1,2,2,2,2,1,1,2,2   ,2,2,1,1,2,2,2,2,1,1,  2,2,  5,5,2,2,2,5,5,0,
0,0,0,0,0,0,0,0 ,0,0  ,1,1,1,1,1,1,1,1,1,1   ,1,1,1,1,1,1,1,1,1,1,  2,2,  5,5,2,2,2,5,5,0,
0,0,0,0,0,0,0,0 ,0,0  ,1,1,1,1,1,1,1,1,1,1   ,1,1,1,1,1,1,1,1,1,1,  5,5,  5,5,5,5,5,5,5,0,

0,0,0,0,0,0,0,0 ,0,0  ,1,1,2,2,2,2,1,1,2,2   ,2,2,1,1,2,2,2,2,1,1,  2,2,  5,5,2,2,2,5,5,0,
0,0,0,0,0,0,0,0 ,0,0  ,1,1,2,2,2,2,1,1,2,2   ,2,2,1,1,2,2,2,2,1,1,  2,2,  5,5,2,2,2,5,5,0,
0,0,0,0,0,0,0,0 ,0,0  ,1,1,1,1,1,1,1,1,1,1   ,1,1,1,1,1,1,1,1,1,1,  5,5,  5,5,5,5,5,5,5,0,
0,0,0,0,0,0,0,0 ,0,0  ,1,1,1,1,1,1,1,1,1,1   ,1,1,1,1,1,1,1,1,1,1,  2,2,  5,5,2,2,2,5,5,0,

0,0,0,0,0,3,3,3 ,3,3  ,1,1,2,2,2,2,1,1,2,2   ,2,2,1,1,2,2,2,2,1,1,  3,3,  3,3,3,3,2,5,5,0,
0,0,0,0,0,3,3,3 ,3,3  ,1,1,2,2,2,2,1,1,2,2   ,2,2,1,1,2,2,2,2,1,1,  3,3,  3,3,3,3,5,5,5,0,
0,0,0,3,3,3,3,3 ,3,3  ,1,1,1,1,1,1,1,1,1,1   ,1,1,1,1,1,1,1,1,1,1,  3,3,  3,3,3,3,3,3,5,0,
0,0,0,3,3,3,3,3 ,3,3  ,1,1,1,1,1,1,1,1,4,4   ,4,4,1,1,1,1,1,1,1,1,  3,3,  3,3,3,3,3,3,5,0,

0,3,3,3,3,3,3,3 ,3,3  ,1,1,1,1,1,1,1,1,4,4   ,4,4,1,1,1,1,1,1,1,1,  3,3,  3,3,3,3,3,3,3,3,
0,3,3,3,3,3,3,3 ,3,3  ,1,1,1,1,1,1,1,1,4,4   ,4,4,1,1,1,1,1,1,1,1,  3,3,  3,3,3,3,3,3,3,3,
};


  mostrarMatrizDisco(matrizDiscoDuro);
}


///MATRIZ DISKETE
void mostrarMatriz3(int matriz[][28]){
///char a=char(219);
  for (int i=0;i<10;i++){
    ///cout<<"                                   ";
    for (int j=0;j<28;j++){
      if (matriz[i][j]==0){
        ///cout<<"asd"<<endl;
        ///color (hConsole,4);
        rlutil::setColor(rlutil::BLACK);

      }
      if (matriz[i][j]==1){
        rlutil::setColor(rlutil::DARKGREY);

      }
      if (matriz[i][j]==2){
        rlutil::setColor(rlutil::GREY);

      }

      if (matriz[i][j]==3){
        rlutil::setColor(rlutil::WHITE);

      }
       if (matriz[i][j]==4){
        rlutil::setColor(rlutil::WHITE);

      }

      rlutil::locate(50+j,21+i);

      cout<<char(219);


    }
    cout<<endl;
  }
          rlutil::setColor(rlutil::WHITE);

}



void mostrarDiskete(){
const int tam5=10, tam6=28;
int matrizDiskete[tam5][tam6]{
0,0,0,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,0,0,
0,0,0,1,1,1,1,1,2,2,2,2,2,2,2,1,1,1,1,2,2,1,1,1,1,1,0,0,
0,0,0,1,1,1,1,1,2,2,2,2,2,2,2,1,1,1,1,2,2,1,1,1,1,1,0,0,
0,0,0,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,0,0,
0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,
0,0,0,1,1,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,1,1,0,0,
0,0,0,1,1,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,1,1,0,0,
0,0,0,1,1,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,1,1,0,0,
0,0,0,1,1,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,1,1,0,0,
0,0,0,1,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,0,0
};

  mostrarMatriz3(matrizDiskete);

}

